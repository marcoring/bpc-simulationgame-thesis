{"remainingRequest":"/Users/marco.ring/Desktop/BA/bpc-simulationgame-thesis/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/marco.ring/Desktop/BA/bpc-simulationgame-thesis/src/views/Dashboard.vue?vue&type=style&index=0&id=22ba47ca&scoped=true&lang=css&","dependencies":[{"path":"/Users/marco.ring/Desktop/BA/bpc-simulationgame-thesis/src/views/Dashboard.vue","mtime":1639397931489},{"path":"/Users/marco.ring/Desktop/BA/bpc-simulationgame-thesis/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marco.ring/Desktop/BA/bpc-simulationgame-thesis/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/marco.ring/Desktop/BA/bpc-simulationgame-thesis/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/marco.ring/Desktop/BA/bpc-simulationgame-thesis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marco.ring/Desktop/BA/bpc-simulationgame-thesis/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZ3JvdW5kZWQtcmFkaWFudHMgewogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7CiAgICBib3JkZXItcmFkaXVzOiA1MHB4OwogICAgYmFja2dyb3VuZDogcmdiKDIyMCwgMjU1LCAyMjApOwogICAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsKICAgIHBhZGRpbmc6IDEwcHg7CiAgICBib3gtc2hhZG93OiAwIDAgMjVweCByZ2JhKDEsIDI0OCwgMSwgMC43MzMpOwp9CgouZ3JvdW5kZWQtcmFkaWFudHM6OmFmdGVyIHsKICAgIHotaW5kZXg6IC0xOwp9Ci5jdXN0b20tdG9vbHRpcCB7CiAgb3BhY2l0eTogMCAhaW1wb3J0YW50Owp9Ci5pdGVtOmhvdmVyIHsKICBib3JkZXItcmFkaXVzOiA1MHB4OwogIGJveC1zaGFkb3c6IDAgMCAyM3B4IHJnYmEoMCwgMTMsIDEyNiwgMC42MDMpOwp9Cg=="},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-container id=\"dashboard\">\n    <v-row v-if=\"this.$store.state.blockGame\">\n      <v-col align=\"center\">\n        <div>\n          <h1>\n            <span style=\"color: green\">Game is blocked. Wait until administrator finishes round.</span> \n          </h1>\n        </div>\n      </v-col>\n    </v-row>\n\n    <!-- Linear Progress-Bar -->\n    <div ref=\"round-items\">\n      <v-row class=\"pa-6 text-left\" ref=\"progress-bar\">\n        <h2>Round {{ this.$store.state.round }}</h2>\n        <v-progress-linear\n          style=\"border-radius: 10px\"\n          :color=\"teamColor\"\n          height=\"30\"\n          :value=\"calculateProgress\"\n          rounded\n          striped\n        >\n          <strong>{{ calculateProgress }}%</strong>\n        </v-progress-linear>\n      </v-row>\n\n      <!-- Circular Progress-Bars with Pop-Overs -->\n      <v-row class=\"pa-10 text-center\" >\n        <v-col v-for=\"element in calculatedProgressElements\" :key=\"element.id\">\n          <v-tooltip bottom content-class='custom-tooltip' >\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-progress-circular\n                :id=\"element.id\"\n                :width=\"15\"\n                :rotate=\"-90\"\n                :size=\"100\"\n                :value=\"element.value\"\n                @click=\"navigateToElement(element.id)\"\n                style=\"cursor: pointer;\"\n                :class=\"calculateClass(element)\"\n                class=\"item\"\n                :color=\"teamColor\"\n                v-bind=\"attrs\"\n                v-on=\"on\"\n              >\n                <v-icon color=\"black\" large>{{ element.icon }}</v-icon>\n              </v-progress-circular>\n            </template>\n          </v-tooltip>\n          <h3 v-show=\"showName(element)\">{{ element.name }}</h3>\n        </v-col>\n      </v-row>\n    </div>\n\n    <v-row v-if=\"this.$store.state.dashboardStep <= 4\" ref=\"guide-btn\" class=\"pa-2\">\n      <v-col align=\"left\" cols=\"9\">\n        <div>\n          <h2>\n            {{ this.stepText }}<span v-if=\"this.$store.state.dashboardStep <= 2\" style=\"color: green\"> Next step is always highlighted green.</span> \n          </h2>\n        </div>\n      </v-col>\n      <v-col align=\"right\">\n        <v-btn @click=\"nextDashboardStep\" link dark rounded :color=\"teamColor\">\n          <b>I understand</b>\n        </v-btn>\n      </v-col>\n    </v-row>\n\n    <!-- Cards -->\n    <v-row class=\"pa-6 text-left\" ref=\"cards\">\n      <v-col>\n        <cost-accounting-card style=\"height:100%\"/>\n      </v-col>\n    </v-row>\n\n    <!-- Leaderboard -->\n    <v-row class=\"pa-6 text-left\" ref=\"leaderboard\">\n      <v-col>\n        <teams-leaderboard />\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport TeamsLeaderboard from \"../components/TeamsLeaderboard.vue\";\nimport CostAccountingCard from \"../components/CostAccountingCard.vue\";\n\nexport default {\n  components: {CostAccountingCard, TeamsLeaderboard},\n  data() {\n    return {\n      teamColor: this.$store.state.color,\n      stepText: ''\n    };\n  },\n  watch: {\n    '$store.state.dashboardStep': function() {\n      if(this.$store.state.dashboardStep === 0) {\n        this.$store.state.dashboardStep++;\n        this.nextDashboardStep();\n      }\n    }\n  },\n  methods: {\n    showName(element) {\n      return element.requiredRound <= this.$store.state.round;\n    },\n    calculateClass(element) {\n      if(this.$store.state.nextStep === element.id && this.$store.state.nextStep !== 'none') {\n        return 'grounded-radiants';\n      } else {\n        return '';\n      }\n    },\n    nextDashboardStep() {\n      if(this.$store.state.dashboardStep === 1) {\n        this.stepText = 'Here you can see all your steps. On the left side is the first step and on the right side is the last one. But you can jump between them as you want! The next step is always highlighted green.';\n        this.firstStep();\n      } else if(this.$store.state.dashboardStep === 2) {\n        this.stepText = 'Here you can find useful data about your current financial situation';\n        this.secondStep();\n      } else if(this.$store.state.dashboardStep === 3){\n        this.stepText = 'And here you can compare your team with others! Every single decision can get you to #1';\n        this.thirdStep();\n      } else {\n        this.finalStep();\n      }\n\n      this.$store.state.dashboardStep++;\n    },\n    firstStep() {\n      this.$emit('toggleMenuVisability');\n\n      this.setOpacity(\"cards\", 0.3);\n      this.setOpacity(\"leaderboard\", 0.3);\n\n      this.setBorder(\"round-items\");\n    },\n    secondStep() {\n      this.setOpacity(\"round-items\", 0.3);\n      this.setOpacity(\"cards\", 1);\n\n      this.resetBorder(\"round-items\");\n      this.setBorder(\"cards\");\n    },\n    thirdStep() {\n      this.setOpacity(\"cards\", 0.3);\n      this.setOpacity(\"leaderboard\", 1);\n\n      this.resetBorder(\"cards\");\n      this.setBorder(\"leaderboard\");\n    },\n    finalStep() {\n      this.$emit('toggleHeaderVisability');\n      this.$emit('toggleMenuVisability');\n\n      this.resetBorder(\"leaderboard\");\n      this.setOpacity(\"leaderboard\", 1);\n      this.setOpacity(\"round-items\", 1);\n      this.setOpacity(\"cards\", 1);\n    },\n    setBorder(name) {\n      this.$refs[name].style.border = '5px solid red';\n      this.$refs[name].style.borderRadius = '20px';\n    },\n    resetBorder(name) {\n      this.$refs[name].style.border = '0px';\n    },\n    setOpacity(name, value) {\n      this.$refs[name].style.opacity = value;\n    },\n    navigateToElement(elementId) {\n      if(this.$store.state.dashboardStep >= 5 && !this.$store.state.blockGame) {\n        this.$router.push(elementId);\n      }\n    }\n  },\n  computed: {\n    calculatedProgressElements() {\n      return this.progressElements.filter(\n        (element) => element.requiredRound <= this.$store.state.round\n      );\n    },\n    calculateProgress() {\n      const prEl = this.progressElements;\n      var sum = 0;\n      var stepsNumber = 0;\n      var isPrElAllowed = false;\n      for (var i = 0; i < prEl.length; i++) {\n        isPrElAllowed = this.$store.state.round >= prEl[i].requiredRound;\n        sum += isPrElAllowed ? prEl[i].value : 0;\n        stepsNumber += isPrElAllowed ? 1 : 0;\n      }\n      return Math.ceil(sum / stepsNumber);\n    },\n    determineStepsNumber() {\n      /*\n        In each new round (totally 6) user\n        gets some new production-steps\n      */\n      switch (this.$store.state.round) {\n        case 1:\n          // (Purchasing, Logistics, Frame Preparation, Sensors Preparation, Bike Construction, Sales)\n          return 6;\n        case 2:\n          // + (Battery Preparation, Quality Assurance)\n          return 8;\n        case 3:\n          // + (Engine Preparation)\n          return 9;\n        case (4, 5, 6):\n          // + (Application Development and Maintenance)\n          return 10;\n        default:\n          // invalid case\n          return 0;\n      }\n    },\n  },\n  props: {progressElements: Array,teamName: String,},\n  mounted() {\n    if(this.$store.state.dashboardStep <= 3) {\n      this.nextDashboardStep();\n    }    \n  }\n};\n</script>\n\n<style scoped>\n.grounded-radiants {\n    position: relative;\n    border: 1px solid transparent;\n    border-radius: 50px;\n    background: rgb(220, 255, 220);\n    background-clip: padding-box;\n    padding: 10px;\n    box-shadow: 0 0 25px rgba(1, 248, 1, 0.733);\n}\n\n.grounded-radiants::after {\n    z-index: -1;\n}\n.custom-tooltip {\n  opacity: 0 !important;\n}\n.item:hover {\n  border-radius: 50px;\n  box-shadow: 0 0 23px rgba(0, 13, 126, 0.603);\n}\n</style>\n"]}]}